#!/bin/bash
set -eux
source {{ upgrade_working_dir }}/stackrc

echo "execute aodh upgrade"
{% if target_upgrade_version == 'mitaka' %}
openstack overcloud deploy --templates {{ tht_dir }} \
    -e tripleo-heat-templates/overcloud-resource-registry-puppet.yaml \
{% if network_isolation == true %}
    -e {{ tht_dir }}/environments/network-isolation.yaml \
    -e {{ tht_dir }}/environments/net-single-nic-with-vlans.yaml \
    -e ~/network-environment.yaml \
{% endif %}
    -e {{ tht_dir }}/environments/puppet-pacemaker.yaml \
{% for item in upgrade_custom_templates_controller %}
    -e {{ item }} \
{% endfor %}
    -e {{ tht_dir }}/environments/major-upgrade-aodh.yaml

# Workaround for:
# https://bugs.launchpad.net/tripleo/+bug/1599798
mv tripleo-heat-templates tripleo-heat-templates.org
git clone https://github.com/openstack/tripleo-heat-templates.git -b stable/mitaka
pushd tripleo-heat-templates
git config user.email "mat.bultel@gmail.com"
git config user.name "matbu"
git fetch https://review.openstack.org/openstack/tripleo-heat-templates refs/changes/79/338879/2 && git checkout FETCH_HEAD
popd

echo "execute keystone upgrade"
openstack overcloud deploy --templates {{ tht_dir }} \
    -e tripleo-heat-templates/overcloud-resource-registry-puppet.yaml \
{% if network_isolation == true %}
    -e {{ tht_dir }}/environments/network-isolation.yaml \
    -e {{ tht_dir }}/environments/net-single-nic-with-vlans.yaml \
    -e ~/network-environment.yaml \
{% endif %}
    -e {{ tht_dir }}/environments/puppet-pacemaker.yaml \
{% for item in upgrade_custom_templates_controller %}
    -e {{ item }} \
{% endfor %}
    -e {{ tht_dir }}/environments/major-upgrade-keystone-liberty-mitaka.yaml
{% endif %}

echo "execute script delivery"
openstack overcloud deploy --templates {{ tht_dir }} \
    -e tripleo-heat-templates/overcloud-resource-registry-puppet.yaml \
{% if network_isolation == true %}
    -e {{ tht_dir }}/environments/network-isolation.yaml \
    -e {{ tht_dir }}/environments/net-single-nic-with-vlans.yaml \
    -e ~/network-environment.yaml \
{% endif %}
    -e {{ tht_dir }}/environments/puppet-pacemaker.yaml \
    -e {{ tht_dir }}/environments/major-upgrade-pacemaker-init.yaml \
{% for item in upgrade_custom_templates_script_delivery %}
    -e {{ item }} \
{% endfor %}

echo "get ceph uuid and update swift"
for swift in $(nova list | grep swift  | awk '{ print $2; }'); do
    echo "Run upgrade on $swift"
    {{ upgrade_non_controller_script }} --upgrade  $swift
done

echo "execute major upgrade controller"
openstack overcloud deploy --templates {{ tht_dir }} \
    -e tripleo-heat-templates/overcloud-resource-registry-puppet.yaml \
{% if network_isolation == true %}
    -e {{ tht_dir }}/environments/network-isolation.yaml \
    -e {{ tht_dir }}/environments/net-single-nic-with-vlans.yaml \
    -e ~/network-environment.yaml \
{% endif %}
    -e {{ tht_dir }}/environments/puppet-pacemaker.yaml \
{% for item in upgrade_custom_templates_controller %}
    -e {{ item }} \
{% endfor %}
    -e {{ tht_dir }}/environments/major-upgrade-pacemaker.yaml

echo "get compute uuid and update compute"
for compute in $(nova list | grep compute  | awk '{ print $2; }'); do
    echo "Run upgrade on $compute"
    {{ upgrade_non_controller_script }} --upgrade  $compute
done

echo "get ceph uuid and update ceph"
for ceph in $(nova list | grep cephstorage  | awk '{ print $2; }'); do
    echo "Run upgrade on $ceph"
    {{ upgrade_non_controller_script }} --upgrade  $ceph
done

echo "execute converge"
openstack overcloud deploy --templates {{ tht_dir }} \
    -e tripleo-heat-templates/overcloud-resource-registry-puppet.yaml \
    -e tripleo-heat-templates/environments/puppet-pacemaker.yaml \
    -e tripleo-heat-templates/environments/major-upgrade-pacemaker-converge.yaml \
{% for item in upgrade_custom_templates_converge %}
    -e {{ item }} \
{% endfor %}
{% if network_isolation == true %}
    -e {{ tht_dir }}/environments/network-isolation.yaml \
    -e {{ tht_dir }}/environments/net-single-nic-with-vlans.yaml \
    -e ~/network-environment.yaml
{% endif %}

echo "check upgrade status"
heat stack-list | grep -i COMPLETE
